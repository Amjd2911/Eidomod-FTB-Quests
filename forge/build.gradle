plugins {
	id "com.github.johnrengelman.shadow" version "5.0.0"
	id "com.matthewprenger.cursegradle"
}

def ENV = System.getenv()

configurations {
	shadowCommon
}

architectury {
	platformSetupLoomIde()
	forge()
}

loom {
	mixinConfigs = [/*"ftbquests.mixins.json", */ "ftbquests-common.mixins.json"]
	useFabricMixin = true
}

dependencies {
	minecraft "com.mojang:minecraft:${rootProject.architectury.minecraft}"
	mappings minecraft.officialMojangMappings()
	forge "net.minecraftforge:forge:${rootProject.forge_version}"
	modApi "me.shedaniel:architectury-forge:${rootProject.architectury_version}"

	modCompile "curse.maven:jei-238222:${jei_file}"
	modCompile "curse.maven:ftb-teams-404468:${rootProject.ftb_teams_version_forge}"
	modCompile "curse.maven:ftb-gui-library-404465:${rootProject.ftb_gui_library_version_forge}"
	modCompile "curse.maven:item-filter-309674:${rootProject.itemfilters_version_forge}"
	modCompile "curse.maven:kubejs-238086:${kubejs_file_forge}"
	modCompile "curse.maven:bookshelf-228525:${bookshelf_file}"
	modCompile "curse.maven:game-stages-268655:${gamestages_file}"
	modCompile "curse.maven:rhino-416294:${rhino_file}"

	compileOnly(project(path: ":common")) {
		transitive = false
	}
	developmentForge(project(path: ":common")) {
		transitive = false
	}
	shadowCommon(project(path: ":common", configuration: "transformProductionForge")) {
		transitive = false
	}
}

processResources {
	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
	inputs.property "version", project.version
}

shadowJar {
	configurations = [project.configurations.shadowCommon]
	classifier "dev-shadow"
}

remapJar {
	input.set shadowJar.archiveFile
	dependsOn shadowJar
	classifier "forge"
}

jar {
	manifest {
		attributes([
				"Specification-Title"     : project.mod_id,
				"Specification-Vendor"    : project.mod_author,
				"Specification-Version"   : "1",
				"Implementation-Title"    : project.name,
				"Implementation-Version"  : version,
				"Implementation-Vendor"   : project.mod_author,
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}

	classifier "dev"
}

if (ENV.CURSEFORGE_KEY) {
	curseforge {
		apiKey = ENV.CURSEFORGE_KEY
		project {
			id = project.curseforge_id_forge
			releaseType = "release"
			addGameVersion "Forge"
			addGameVersion "1.16.4"
			addGameVersion "1.16.5"
			mainArtifact(remapJar.archivePath)
			relations {
				requiredDependency 'architectury-forge'
				requiredDependency 'ftb-gui-library'
				requiredDependency 'item-filters'
				optionalDependency 'kubejs'
				optionalDependency 'jei'
				optionalDependency 'game-stages'
			}
			changelog = getGitChangelog
			changelogType = 'markdown'
		}
	}
}